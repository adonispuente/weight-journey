[{"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/index.js":"1","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/reportWebVitals.js":"2","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/App.js":"3","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/WeightJourney/WeightJourney.jsx":"4","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/WeightJourney/Calculations.jsx":"5","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/reducers/send.js":"6","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/actions/index.js":"7","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/actions/submitWeightAction.js":"8"},{"size":956,"mtime":1607538174681,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607014086230,"results":"11","hashOfConfig":"10"},{"size":318,"mtime":1607539253963,"results":"12","hashOfConfig":"10"},{"size":276,"mtime":1607448967237,"results":"13","hashOfConfig":"10"},{"size":9946,"mtime":1607654713249,"results":"14","hashOfConfig":"10"},{"size":939,"mtime":1607643192292,"results":"15","hashOfConfig":"10"},{"size":144,"mtime":1607448504006,"results":"16","hashOfConfig":"10"},{"size":306,"mtime":1607639756751,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1r6peq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/index.js",["39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware} from 'redux'\nimport reducer from './reducers/send'\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <Provider store ={store} >\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["40","41"],"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/reportWebVitals.js",[],"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/App.js",[],"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/WeightJourney/WeightJourney.jsx",[],"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/WeightJourney/Calculations.jsx",["42","43","44","45","46","47","48"],"import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport {useSelector, useDispatch} from 'react-redux'\nimport allActions from \"../actions\";\nimport \"./Calculations.css\"\n\n\nexport default function Calculations(){\n \n//styling for the pie chart ---------------------------------------\n    var piestyle={\n        height: '40vh',\n        padding:'0,40',\n    }\n    const lineWidth = 60;\n//----------------------------------------\n\n\n\n\n    const initialPerson = {\n        Lifestyle: \"\",\n        //currentWeight\n        CW:\"\",\n        //Estimated body fat\n        EBF:\"\",\n        //Goal weight Change Per week\n        GWCPW:\"\",\n        height:\"\",\n        age:\"\",\n        MF:\"\",\n    }\n   \n   \n    const data = false;\n    const [male,setMale] = useState(false);\n    const [female,setFemale] = useState(false);\n    const person = useSelector(state => state.person);\n    // const [error,setError] = useState();\n    // const [startDate, setStartDate] = useState(new Date());\n    const dispatch = useDispatch()\n    const [metrics,setMetrics]= useState(false)\n    const [currentPerson,setCurrentPerson] = useState(initialPerson);\n\n\n\n    const Changing = (event)=>{\n        // setPerson({...person, [event.target.name]: event.target.value})\n        console.log(event.target)\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setCurrentPerson({\n            ...currentPerson,\n            [name]: value,\n        })\n    }\n    \n    const submitForm = (e) => {\n        e.preventDefault();\n        setMetrics(true)\n\n        if(currentPerson.MF=='Male'){\n            setMale(true);\n            setFemale(false);\n        }else if(currentPerson.MF=='Female'){\n            setFemale(true);\n            setMale(false);\n        }\n        \n      };\n    \n    \n\n \n\n\n    return(\n    <div>\n         <h1>Figure Out How to Eat for Your Goals!</h1>\n        <div className=\"flex\">\n           \n            <div class=\"spacing\">\n                <form onSubmit={submitForm} class=\"box container\">\n                    <h1 class= 'h1'>Step 1</h1>\n                    <label className=\"form-input\">\n                        <select class=\"form-input\"\n                         id =\"Lifestyle\" name = \"Lifestyle\" placeholder =\"Activity Level\" value={currentPerson.Lifestyle} onChange={Changing}>\n                            <option style={{color:'white'}}>Whats your lifestyle?</option>\n                            <option value={1}>little to none</option>\n                            <option value={1.2}> 1-3 days a week</option>\n                            <option value={1.375}>3-5 days a week</option>\n                            <option value={1.55}>6-7 days a week </option>\n                            <option value={1.7}>Every day!!!</option>\n                            \n                        </select>\n                    </label>\n                    {/* <label>\n                            <DatePicker class=\"form-input\" placeholder=\"Date\" name=\"date\" selected={startDate} onChange={date => setStartDate(date)}  />\n                    </label> */}\n                    <label>\n                            <input \n                            class=\"form-input\"\n                            name =\"CW\"\n                            placeholder=\"Weight in Lbs\"\n                            value={currentPerson.CW}\n                            onChange={Changing}\n                            />\n                    </label>\n                    {/* male or female part */}\n                    <label>\n                        <select class=\"form-input\"\n                            id =\"MF\" name = \"MF\" placeholder=\"Male or Female\" value={currentPerson.MF} onChange={Changing}>\n                            <option style={{color:'white'}}>Male or Female</option>\n                            <option value={'Male'}>Male</option>\n                            <option value={'Female'}> Female</option>\n                           \n                        </select>\n                    </label>\n                    <label>\n                           \n                            <p style={{color:'white',opacity:'0.5',fontSize:'14px'}}>This is per week</p>\n                        <select class=\"form-input\"\n                            id =\"GWCPW\" name = \"GWCPW\" placeholder=\"Goal Weight Change Per week??\" value={currentPerson.GWCPW} onChange={Changing}>\n                            <option style={{color:'white'}}>Goal Weight Change</option>\n                            <option value={-500}>-1lb a week</option>\n                            <option value={-250}> -0.5lb a week</option>\n                            <option value={0}>Maintain</option>\n                            <option value={250}>0.5lb a week </option>\n                            <option value={500}>1lb a week</option>\n                            \n                        </select>\n                    </label>\n                    <label>\n                            <input\n                            class=\"form-input\"\n                            name =\"height\"\n                            placeholder=\"Height in inches\"\n                            value={currentPerson.height}\n                            onChange={Changing}\n                            />\n                    </label>\n                    <label>\n                            <input\n                            class=\"form-input\"\n                            name =\"age\"\n                            placeholder=\"Age\"\n                            value={currentPerson.age}\n                            onChange={Changing}\n                            /> \n                    </label>\n                    \n\n                    <button class=\"button\" onClick={()=>dispatch(allActions.postPerson(currentPerson))}>Add your stats!\n        \n                    </button>\n                    \n                    \n                </form>\n            </div>\n\n        <div className=\"spacing step2\">\n               <h1 class= 'h1'>Step 2</h1>\n               <div class=\"pcf\">\n                    <p style={{color:'#23c7da'}}>Protein</p>\n                    <p style={{color:'black'}}>Carbohydrates</p>\n                    <p style={{color:'#c0c0c0'}}>Fats</p>\n               </div>\n               <div style={piestyle} class=\"pie\">\n               <PieChart \n               \n                    totalValue={100}\n                        data={[\n                            { title: 'Protein', value: 20, color: '#c0c0c0' },\n                            { title: 'Carbs', value: 40, color: '#23c7da' },\n                            { title: 'Fats', value: 40, color: 'black' },\n                        ]}\n                        segmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\n                        animate\n                        // onClick={PieChart.animate}\n                        \n                        animationDuration={1000}\n                        //the donut part\n                        lineWidth={60}\n                        label={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\n                        labelPosition={100 - lineWidth / 2}\n                        labelStyle={{\n                            fill: '#fff',\n                            opacity: 0.75,\n                            pointerEvents: 'none',\n                          }}\n                          style={{\n                            fontFamily:\n                              '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\n                            fontSize: '10px',\n                          }}\n                          radius= {PieChart.defaultProps.radius-6}\n                          //this is making the blue pop out more\n                        //   segmentsShift={(index) => (index === 0 ? shiftSize : 0.5)}\n\n\n                    />\n                </div>\n               <p style={{paddingTop:'40px', color:'white'}}>Your Estimated Total Daily Energy Expenditure is...</p>\n               <div>\n                            {metrics !== false&& male == true ? (\n                                <div>\n                                    \n                                    <p style={{color:'white'}}>Your estimated Current TDEE is {Math.round(person.Lifestyle * (66 + (6.23 * person.CW) +(12.7 * person.height) - (6.8 * person.age)))}</p>\n                                    <hr></hr>\n                                    <p style={{color:'white'}}> To reach your goal, you have to eat {+currentPerson.GWCPW +(+Math.round(person.Lifestyle * (66 + (6.23 * person.CW) +(12.7 * person.height) - (6.8 * person.age))))}</p>\n                                \n                                </div>\n\n\n                                ) : (\n                                    <div />\n                                )}\n                                 {metrics !== false&& female == true ? (\n                                <div>\n                                    \n                                    <p style={{color:'white'}}>Your estimated Current TDEE is {Math.round(person.Lifestyle * (655 + (4.35 * person.CW) +(4.7 * person.height) - (4.7 * person.age)))}</p>\n                                    <hr></hr>\n                                    <p style={{color:'white'}}> To reach your goal, you have to eat {+currentPerson.GWCPW +(+Math.round(person.Lifestyle * (66 + (6.23 * person.CW) +(12.7 * person.height) - (6.8 * person.age))))}</p>\n                                \n                                </div>\n\n\n                                ) : (\n                                    <div />\n                                )}\n                    </div>   \n                 \n        </div>\n                \n                {/* <h3>Don't know youre Body Fat%? Lets get you an estimate!</h3> */}\n        </div>\n                  \n\n\n    </div>\n    );\n}\n\n","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/reducers/send.js",["49"],"import allActions from '../actions/index'\n\nconst initialState = {\n    person:{\n      Lifestyle: \"\",\n        CW:\"\",\n        //Estimated body fat\n        EBF:\"\",\n        //Goal weight Change Per week\n        GWCPW:\"\",\n        date:\"\"\n    },\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case \"GET_PERSON\":\n        return {\n          ...state,\n          person: action.payload,\n        };\n      case \"POST_PERSON\":\n        const newPerson = {\n          Lifestyle: action.payload.Lifestyle,\n          CW: action.payload.CW,\n          EBF: action.payload.EBF,\n          GWCPW:action.payload.GWCPW,\n          date: action.payload.startDate,\n          height:action.payload.height,\n          age:action.payload.age,\n          MF:action.payload.MF,\n        };\n        return { ...state, person: [...state.person, newPerson] };\n  \n      default:\n        return state;\n    }\n  };\n\n  export default reducer;","/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/actions/index.js",[],"/Users/adonispuente/Desktop/SideProjects/weight-journey/weight-journey/src/actions/submitWeightAction.js",["50","51"],"import axios from \"axios\";\n\n\n export const getPerson = (personObj) => {\n    \n}\n   \n  \n  \n    export const postPerson = (newPerson) => {\n        return {\n            type: \"GET_PERSON\",\n            payload:newPerson,\n            \n        }\n   \n  };\n  \n\nexport default {\n    getPerson,\n    postPerson,\n}\n\n\n\n\n",{"ruleId":"52","severity":1,"message":"53","line":11,"column":8,"nodeType":"54","messageId":"55","endLine":11,"endColumn":19},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"61","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":18},{"ruleId":"52","severity":1,"message":"62","line":37,"column":11,"nodeType":"54","messageId":"55","endLine":37,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":65,"column":28,"nodeType":"65","messageId":"66","endLine":65,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":68,"column":34,"nodeType":"65","messageId":"66","endLine":68,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":208,"column":55,"nodeType":"65","messageId":"66","endLine":208,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":221,"column":62,"nodeType":"65","messageId":"66","endLine":221,"endColumn":64},{"ruleId":"52","severity":1,"message":"67","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":18},{"ruleId":"52","severity":1,"message":"68","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":20,"column":1,"nodeType":"71","endLine":23,"endColumn":2},"no-unused-vars","'getMuiTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'useEffect' is defined but never used.","'DatePicker' is defined but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'allActions' is defined but never used.","'axios' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]